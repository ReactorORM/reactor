<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<head>
<title>What Reactor Isn't</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="default_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='default.css'>");}
//-->
</script>
<script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
-->
</style><script type="text/javascript" language="javascript1.2" src="whmsg.js"></script>
<script type="text/javascript" language="javascript" src="whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js"></script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.addTocInfo)
	{
	addTocInfo("About Reactor\nWhat Reactor Isn't");
addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);

	if (window.setRelStartPage)
	{
	setRelStartPage("Reactor_Documentation.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
<h1>What Reactor Isn't</h1>

<p>Reactor is a powerful tool which helps accelerate development. &nbsp;However, 
 it is not a panacea. &nbsp;It 
 can not be (and will never be) everything you want it to be. &nbsp;Here 
 are some things that Reactor is not:</p>

<h2>Reactor is Not Ruby (or ColdFusion) on Rails</h2>

<p>The Ruby on Rails framework has garnered a lot of interest in recent 
 history, especially in the ColdFusion community. &nbsp;Rails 
 is a framework used to rapidly build applications in the Ruby language.</p>

<p>&nbsp;</p>

<p>There are two major components to the Ruby on Rails framework that most 
 people are familiar with:</p>

<h3>Code Generation</h3>

<p>In particular, Ruby on Rails is famous for the Active Record design 
 pattern. &nbsp;Like 
 Ruby on Rails, Reactor is a code generator. &nbsp;However, 
 the processes used by Ruby and the actual generated code are quite different 
 from what Reactor generates. &nbsp;</p>

<p>&nbsp;</p>

<p>For example, Ruby on Rails, which is an MVC framework, generates a whole 
 set of controllers for your application. &nbsp;Reactor 
 is agnostic to your application’s overall architecture. &nbsp;You 
 can use Reactor with your own framework, Model-Glue, Mach-II, Fusebox 
 or even without any framework at all.</p>

<h3>Scaffolding</h3>

<p>One of the most widely touted features of Ruby on Rails is its ability 
 to generate “scaffolding” for your applications. &nbsp;Scaffolding 
 creates simple pages which allow you to create, read, update and delete 
 your database objects. &nbsp;The 
 scaffolding is customized by the developer.</p>

<p>&nbsp;</p>

<p>Reactor does not do any sort of user interface generation and it never 
 will. &nbsp;It’s 
 possible that someone could choose their favorite ColdFusion framework 
 (such as Model-Glue) and create a scaffolding program which implements 
 Reactor and that framework. &nbsp;However, 
 that’s beyond the scope of Reactor.</p>

<p>&nbsp;</p>

<p class=note>Note: The 2.0 version of Model-Glue uses Reactor and ColdSpring 
 to bring scaffolding to ColdFusion.</p>

<p>&nbsp;</p>

<p>One Other Difference</p>

<p>&nbsp;</p>

<p>Lastly, the Rails framework relies heavily on convention and shuns XML 
 configuration files. &nbsp;Reactor 
 (arguably) doesn't rely on convention and uses a simple XML configuration 
 file to define relationships between database objects.</p>

<p>&nbsp;</p>

<p>Reactor was, in fact, inspired by a lot of the hubbub around Ruby on 
 Rails. &nbsp;However, 
 this does not mean that Reactor has all of the functionality or Ruby on 
 Rails – nor does it try to.</p>

<h3>Reactor is Not a Panacea</h3>

<p>Reactor will not walk your dog. &nbsp;Reactor 
 will not clean your bathroom. &nbsp;Reactor 
 does not slice and dice nor make Julian fries. &nbsp;</p>

<p>Reactor does not do everything you need it to. &nbsp;It 
 can’t. &nbsp;(How 
 could it?) &nbsp;</p>

<p>&nbsp;</p>

<p>When you’re working with Reactor you’re going to have to customize some 
 objects to get them to do what you want. &nbsp;Reactor 
 tries to make this as easy as possible.</p>

<p>&nbsp;</p>

<p>Keep in mind that the purpose of Reactor is to reduce the amount of 
 tedious, repetitive and error-prone work you’d have to do by hand otherwise. 
 &nbsp;It allows 
 you to focus on what makes your application unique.</p>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
</body>
</html>
