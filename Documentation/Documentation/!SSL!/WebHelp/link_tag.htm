<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<head>
<title>link tag</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="default_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='default.css'>");}
//-->
</script>
<style type="text/css">
<!--
p.whs1 { x-text-underline:normal; text-decoration:underline; }
table.whs2 { width:100%; border-spacing:0px; }
th.whs3 { padding-left:3px; padding-top:3px; padding-right:3px; padding-bottom:3px; border-bottom-color:#000000; border-bottom-width:1px; border-bottom-style:Solid; border-right-color:#000000; border-right-width:1px; border-right-style:Solid; border-left-color:#000000; border-left-width:1px; border-left-style:Solid; border-top-color:#000000; border-top-width:1px; border-top-style:Solid; }
th.whs4 { padding-left:3px; padding-top:3px; padding-right:3px; padding-bottom:3px; border-bottom-color:#000000; border-bottom-width:1px; border-bottom-style:Solid; border-right-color:#000000; border-right-width:1px; border-right-style:Solid; border-top-color:#000000; border-top-width:1px; border-top-style:Solid; }
th.whs5 { padding-left:3px; padding-top:3px; padding-right:3px; padding-bottom:3px; border-bottom-color:#000000; border-bottom-width:1px; border-bottom-style:Solid; border-top-color:#000000; border-top-width:1px; border-top-style:Solid; border-right-color:#000000; border-right-width:1px; border-right-style:Solid; }
td.whs6 { padding-left:3px; padding-top:3px; padding-right:3px; padding-bottom:3px; border-bottom-color:#000000; border-bottom-width:1px; border-bottom-style:Solid; border-right-color:#000000; border-right-width:1px; border-right-style:Solid; border-left-color:#000000; border-left-width:1px; border-left-style:Solid; }
td.whs7 { padding-left:3px; padding-top:3px; padding-right:3px; padding-bottom:3px; border-bottom-color:#000000; border-bottom-width:1px; border-bottom-style:Solid; border-right-color:#000000; border-right-width:1px; border-right-style:Solid; }
td.whs8 { padding-left:3px; padding-top:3px; padding-right:3px; padding-bottom:3px; border-right-color:#000000; border-right-width:1px; border-right-style:Solid; border-left-color:#000000; border-left-width:1px; border-left-style:Solid; border-bottom-color:#000000; border-bottom-width:1px; border-bottom-style:Solid; }
td.whs9 { padding-left:3px; padding-top:3px; padding-right:3px; padding-bottom:3px; border-right-color:#000000; border-right-width:1px; border-right-style:Solid; border-bottom-color:#000000; border-bottom-width:1px; border-bottom-style:Solid; }
table.whs10 { x-cell-content-align:top; width:100%; border-spacing:0px; }
col.whs11 { width:33.333%; }
tr.whs12 { x-cell-content-align:top; }
th.whs13 { width:33.333%; border-left-width:1px; border-left-color:#000000; border-left-style:solid; border-top-style:solid; border-top-color:#000000; border-top-width:1px; border-right-width:1px; border-right-color:#000000; border-right-style:solid; border-bottom-style:solid; border-bottom-color:#000000; border-bottom-width:1px; padding-right:10px; padding-left:10px; }
th.whs14 { width:33.333%; border-top-style:solid; border-top-color:#000000; border-top-width:1px; border-right-width:1px; border-right-color:#000000; border-right-style:solid; border-bottom-style:solid; border-bottom-color:#000000; border-bottom-width:1px; padding-right:10px; padding-left:10px; }
td.whs15 { width:33.333%; border-left-width:1px; border-left-color:#000000; border-left-style:solid; border-right-width:1px; border-right-color:#000000; border-right-style:solid; border-bottom-style:solid; border-bottom-color:#000000; border-bottom-width:1px; padding-right:10px; padding-left:10px; }
td.whs16 { width:33.333%; border-right-width:1px; border-right-color:#000000; border-right-style:solid; border-bottom-style:solid; border-bottom-color:#000000; border-bottom-width:1px; padding-right:10px; padding-left:10px; }
td.whs17 { width:33.333%; padding-right:10px; padding-left:10px; border-left-style:solid; border-left-color:#000000; border-left-width:1px; border-right-style:solid; border-right-color:#000000; border-right-width:1px; border-bottom-width:1px; border-bottom-color:#000000; border-bottom-style:solid; }
td.whs18 { width:33.333%; padding-right:10px; padding-left:10px; border-right-style:solid; border-right-color:#000000; border-right-width:1px; border-bottom-width:1px; border-bottom-color:#000000; border-bottom-style:solid; }
p.whs19 { font-style:italic; }
-->
</style><script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
-->
</style><script type="text/javascript" language="javascript1.2" src="whmsg.js"></script>
<script type="text/javascript" language="javascript" src="whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js"></script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.addTocInfo)
	{
	addTocInfo("Reactor XML Configuration File\n<reactor> tag\n<objects> tag\n<object> tag\n<hasMany> tag\n<link> tag");
addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);

	if (window.setRelStartPage)
	{
	setRelStartPage("Reactor_Documentation.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
<h1>&lt;link&gt; tag</h1>

<h4>Description</h4>

<p>The relate tag is used to specify an object which related a parent object 
 to a child object. &nbsp;This 
 tag must be nested under a <a href="hasMany.htm">hasMany</a> tag. &nbsp;This 
 tag has three arguments, name, from and to. &nbsp;The 
 name argument specifies the alias of the object through which the parent 
 is linked to the child.</p>

<p>&nbsp;</p>

<p>Only one link tag can be nested under a <a href="hasMany.htm">hasMany</a> 
 tag. &nbsp;For 
 detailed information see the <a href="hasMany.htm">hasMany</a> tag documentation.</p>

<p>&nbsp;</p>

<p>The link tag's from and to arguments are used to specify specific relationships 
 to use to relate the parent to the link and the link to the child. For 
 example, maybe your database structure relates users to other users though 
 a relationship table. &nbsp;Here's 
 an example schema:</p>

<p>&nbsp;</p>

<p class="whs1"><span><U>User 
 Table</U></span></p>

<p>&nbsp;</p>

<table x-use-null-cells cellspacing="0" width="100%" class="whs2">

<tr>
<th scope="col" class="whs3">Name</th>
<th scope="col" class="whs4">Type</th>
<th scope="col" class="whs4">Nullable</th>
<th scope="col" class="whs4">Default</th>
<th scope="col" class="whs5">Other</th></tr>

<tr>
<td class="whs6">userId</td>
<td class="whs7">Int</td>
<td class="whs7">No</td>
<td class="whs7">&nbsp;</td>
<td class="whs7">PK / Identity</td></tr>

<tr>
<td class="whs6">firstName</td>
<td class="whs7">Varchar(50)</td>
<td class="whs7">No</td>
<td class="whs7">&nbsp;</td>
<td class="whs7">&nbsp;</td></tr>

<tr>
<td class="whs8">lastName</td>
<td class="whs9">Varchar(50)</td>
<td class="whs9">No</td>
<td class="whs9">&nbsp;</td>
<td class="whs7">&nbsp;</td></tr>
</table>

<p>&nbsp;</p>

<p class="whs1">Relation 
 Table</p>

<p class="whs1">&nbsp;</p>

<table x-use-null-cells cellspacing="0" width="100%" class="whs2">

<tr>
<th scope="col" class="whs3">Name</th>
<th scope="col" class="whs4">Type</th>
<th scope="col" class="whs4">Nullable</th>
<th scope="col" class="whs4">Default</th>
<th scope="col" class="whs5">Other</th></tr>

<tr>
<td class="whs6">relationId</td>
<td class="whs7">Int</td>
<td class="whs7">No</td>
<td class="whs7">&nbsp;</td>
<td class="whs7">PK / Identity</td></tr>

<tr>
<td class="whs6">userId</td>
<td class="whs7">Int</td>
<td class="whs7">No</td>
<td class="whs7">&nbsp;</td>
<td class="whs7">FK to User.userId</td></tr>

<tr>
<td class="whs8">relatedUserId</td>
<td class="whs9">Int</td>
<td class="whs9">No</td>
<td class="whs9">&nbsp;</td>
<td class="whs7">FK to User.userId</td></tr>
</table>

<p class="whs1">&nbsp;</p>

Note that the Relation table will have multiple relationships to the User 
 table though different columns. &nbsp;Without 
 specifying the from or to attributes your configuration XML would look 
 like this: 

<br>&nbsp; 
 

<p class=code>&lt;reactor&gt;<br>
 &nbsp;&lt;objects&gt;<br>
 &nbsp;&nbsp;&nbsp;&lt;object 
 name=&quot;User&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hasMany 
 name=&quot;User&quot; alias=&quot;RelatedUser&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;link 
 name=&quot;Relation&quot; /&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/hasMany&gt;<br>
 &nbsp;&nbsp;&nbsp;&lt;/object&gt;<br>
<br>
 &nbsp;&nbsp;&nbsp;&lt;object 
 name=&quot;Relation&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hasOne 
 name=&quot;User&quot; alias=&quot;ParentUser&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;relate 
 from=&quot;userId&quot; to=&quot;userId&quot; /&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/hasOne&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hasOne 
 name=&quot;User&quot; alias=&quot;ChildUser&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;relate 
 from=&quot;relatedUserId&quot; to=&quot;userId&quot; /&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/hasOne&gt;<br>
 &nbsp;&nbsp;&nbsp;&lt;/object&gt;<br>
<br>
 &nbsp;&lt;/objects&gt;<br>
&lt;/reactor&gt;</p>

&nbsp; 

<br>Given 
 this configuration, reactor will try use to guess which relationships 
 to use to link users to users. &nbsp;Because 
 there are two relationships from Relation to User this is ambiguous and 
 Reactor will always choose the first one it finds. &nbsp;This 
 will result in the incorrect data being returned when you call <span class=function>getRelatedUserIterator()</span> 
 on the User Record. 

<br>&nbsp; 
 

<br>To 
 fix the problem you need to be more explicit and define the relationships 
 to use for the link. &nbsp;In 
 this case, we want to join the User to Relation via the ParentUser relationship 
 and then from the Relation to User via the ChildUser relationship. &nbsp;This 
 configuration would look like this: 

<br>&nbsp; 
 

<p class=code>&lt;reactor&gt;<br>
 &nbsp;&lt;objects&gt;<br>
 &nbsp;&nbsp;&nbsp;&lt;object 
 name=&quot;User&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hasMany 
 name=&quot;User&quot; alias=&quot;RelatedUser&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;link 
 name=&quot;Relation&quot; from=&quot;ParentUser&quot; to=&quot;ChildUser&quot; 
 /&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/hasMany&gt;<br>
 &nbsp;&nbsp;&nbsp;&lt;/object&gt;<br>
<br>
 &nbsp;&nbsp;&nbsp;&lt;object 
 name=&quot;Relation&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hasOne 
 name=&quot;User&quot; alias=&quot;ParentUser&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;relate 
 from=&quot;userId&quot; to=&quot;userId&quot; /&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/hasOne&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hasOne 
 name=&quot;User&quot; alias=&quot;ChildUser&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;relate 
 from=&quot;relatedUserId&quot; to=&quot;userId&quot; /&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/hasOne&gt;<br>
 &nbsp;&nbsp;&nbsp;&lt;/object&gt;<br>
<br>
 &nbsp;&lt;/objects&gt;<br>
&lt;/reactor&gt;</p>

<h4>Attributes</h4>

<table x-use-null-cells cellspacing="0" width="100%" class="whs10">
<col class="whs11">
<col class="whs11">
<col class="whs11">

<tr valign="top" class="whs12">
<th scope="col" width="33.333%" class="whs13">
<p>Attribute</th>
<th scope="col" width="33.333%" class="whs14">
<p>Required</th>
<th scope="col" width="33.333%" class="whs14">
<p>Description</th></tr>

<tr valign="top" class="whs12">
<td colspan="1" rowspan="1" width="33.333%" class="whs15">
<p>name</td>
<td colspan="1" rowspan="1" width="33.333%" class="whs16">
<p>Yes</td>
<td colspan="1" rowspan="1" width="33.333%" class="whs16">
<p>The name of the object which links the parent to the child. &nbsp;(See 
 <a href="hasMany.htm">hasMany</a> for more information.)</td></tr>

<tr valign="top" class="whs12">
<td width="33.333%" class="whs15">
<p>from</td>
<td width="33.333%" class="whs16">
<p>No</td>
<td width="33.333%" class="whs16">
<p>Specifies a specific relationship to relate the parent to the link. 
 &nbsp;This relationship 
 can be on either the parent or the link.</td></tr>

<tr valign="top" class="whs12">
<td colspan="1" rowspan="1" width="33.333%" class="whs17">
<p>to</td>
<td colspan="1" rowspan="1" width="33.333%" class="whs18">
<p>No</td>
<td colspan="1" rowspan="1" width="33.333%" class="whs18">
<p>Specifies a specific relationship to relate the link to the child. &nbsp;This 
 relationship can be on either the link or the child.</td></tr>
</table>

<h4>Child tags</h4>

<p class="whs19">None</p>

<h4>Example</h4>

<p class=code>&lt;reactor&gt;<br>
 &nbsp;&lt;objects&gt;<br>
 &nbsp;&nbsp;&nbsp;&lt;object 
 name=&quot;Customer&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hasMany 
 name=&quot;Address&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;link 
 name=&quot;Customer&quot; /&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/hasMany&gt;<br>
 &nbsp;&nbsp;&nbsp;&lt;/object&gt;<br>
<br>
 &nbsp;&nbsp;&nbsp;&lt;object 
 name=&quot;CustomerAddress&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hasOne 
 name=&quot;Customer&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;relate 
 from=&quot;customerId&quot; to=&quot;customerId&quot; /&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/hasOne&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;hasOne 
 name=&quot;Address&quot;&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;relate 
 from=&quot;addressId&quot; to=&quot;addressId&quot; /&gt;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/hasOne&gt;<br>
 &nbsp;&nbsp;&nbsp;&lt;/object&gt;<br>
<br>
 &nbsp;&nbsp;&nbsp;&lt;object 
 name=&quot;Address&quot; /&gt;<br>
 &nbsp;&lt;/objects&gt;<br>
&lt;/reactor&gt;</p>

&nbsp; 

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
</body>
</html>
