<modelglue>
	<config>
		<setting name="beanMappings" value="/ReactorSamples/Blog/config/beans/" />
		<setting name="viewMappings" value="/ReactorSamples/Blog/views" />
		<setting name="defaultEvent" value="Home" />
		<setting name="reload" value="true" />
		<setting name="debug" value="false " />
		<!-- These are all optional as of 1.0	
		<setting name="statebuilder" value="ModelGlue.Util.GenericCollection" />
		<setting name="defaultEvent" value="Home" />
		<setting name="reloadKey" value="init" />
		<setting name="reloadPassword" value="true" />
		<setting name="statePrecedence" value="Form" />
		<setting name="eventValue" value="event" />
		<setting name="defaultTemplate" value="index.cfm" />
		<setting name="defaultExceptionHandler" value="Exception" />
		<setting name="defaultCacheTimeout" value="5" />
		-->
	</config>

	<controllers>
		<controller name="blogController" type="ReactorSamples.Blog.controller.BlogController">
			<message-listener message="OnRequestStart" function="OnRequestStart" />
			<message-listener message="NeedCategories" function="GetCategories" />
			<message-listener message="NeedEntries" function="GetEntries" />
			<message-listener message="NeedEntry" function="GetEntry" />
			<message-listener message="ValidateEntry" function="DoValidateEntry" />
			<message-listener message="SaveEntry" function="DoSaveEntry" />
			<message-listener message="DeleteEntry" function="DoDeleteEntry" />
			<message-listener message="RateEntry" function="DoRateEntry" />
		</controller>
		<controller name="userController" type="ReactorSamples.Blog.controller.UserController">
			<message-listener message="OnRequestStart" function="OnRequestStart" />
			<message-listener message="ValidateLogin" function="DoValidateLogin" />
			<message-listener message="Logout" function="DoLogout" />
			<message-listener message="CheckIfLoggedIn" function="DoCheckIfLoggedIn" />
			<message-listener message="SaveEventValues" function="DoSaveEventValues" />
			<message-listener message="RestoreEventValues" function="DoRestoreEventValues" />
		</controller>
	</controllers>
  
	<event-handlers>
		<!-- Event-Handler Template
		<event-handler>
			<broadcasts>
				<message name="DoSomething">
					<argument name="SampleArg" value="iAmASampleArgument" />
				</message>
			</broadcasts>
			<views>
				<include name="body" template="page.cfm" append="false">
					<value name="SomeValue" value="I am a value available in Viewstate" overwrite="false" />
				</include>
			</views>
			<results>
				<result name="resultValue" do="EventHandlerName" />
				<result name="redirectingResultValue" do="EventHandlerName" redirect="true" />
				<result do="resultThatWillAlwaysRun" />
			</results>
		</event-handler>
		--> 
	
		<event-handler name="Home">
			<broadcasts>
				<message name="NeedEntries" />
			</broadcasts>
			<views>
				<include name="body" template="dspEntries.cfm" />
			</views>
			<results>
				<result do="Layout" />
			</results>
		</event-handler>
		
		<event-handler name="ViewEntry">
			<broadcasts>
				<message name="NeedEntry" />
			</broadcasts>
			<views>
				<include name="body" template="dspEntry.cfm" />
				<include name="body" template="dspComments.cfm" append="true" />
			</views>
			<results>
				<result do="Layout" />
			</results>
		</event-handler>
		
		<event-handler name="RateEntry">
			<broadcasts>
				<message name="RateEntry" />
			</broadcasts>
			<views />
			<results>
				<result do="ViewEntry" />
			</results>
		</event-handler>
		
		<event-handler name="EntryForm">
			<broadcasts>
				<message name="CheckIfLoggedIn">
					<argument name="returnToEvent" value="EntryForm" />
				</message>		
				<message name="NeedEntry" />
				<message name="NeedCategories" />
			</broadcasts>
			<views>
				<include name="body" template="dspEntryForm.cfm" />
			</views>
			<results>
				<result do="Layout" />
			</results>
		</event-handler>
		
		<event-handler name="SubmitEntryForm">
			<broadcasts>
				<message name="CheckIfLoggedIn">
					<argument name="returnToEvent" value="EntryForm" />
				</message>
				<message name="NeedEntry" />
				<message name="ValidateEntry" />
			</broadcasts>
			<views />
			<results>
				<result name="valid" do="SaveEntry" />
				<result name="invalid" do="EntryForm" />
			</results>
		</event-handler>
		
		<event-handler name="SaveEntry" access="private">
			<broadcasts>
				<message name="SaveEntry" />
			</broadcasts>
			<views />
			<results>
				<result do="Home" />
			</results>
		</event-handler>
		
		<event-handler name="DeleteEntry">
			<broadcasts>
				<message name="CheckIfLoggedIn">
					<argument name="returnToEvent" value="Home" />
				</message>
				<message name="NeedEntry" />
				<message name="DeleteEntry" />
			</broadcasts>
			<views />
			<results>
				<result do="Home" />
			</results>
		</event-handler>
		
		<event-handler name="Logout">
			<broadcasts>
				<message name="Logout" />
			</broadcasts>
			<results>
				<result do="Home" />
			</results>
		</event-handler>
		
		<event-handler name="LoginForm">
			<broadcasts />
			<views>
				<include name="body" template="dspLoginForm.cfm" />
			</views>
			<results>
				<result do="Layout" />
			</results>
		</event-handler>
		
		<event-handler name="SubmitLoginForm">
			<broadcasts>
				<message name="ValidateLogin" />
			</broadcasts>
			<views />
			<results>
				<result name="invalid" do="LoginForm" />
			</results>
		</event-handler>
	
		<event-handler name="Layout">
			<broadcasts>
				<message name="NeedCategories" />
			</broadcasts>
			<views>
				<include name="leftNav" template="dspMainNav.cfm" />
				<include name="leftNav" template="dspCategoryNav.cfm" append="true" />
				<include name="bottomNav" template="dspBottomNav.cfm" />
				<include name="body" template="dspLayout.cfm" />
			</views>
			<results />
		</event-handler>
		
		<event-handler name="Exception">
			<broadcasts />
			<views>
				<include name="body" template="dspException.cfm" />
			</views>
			<results />
		</event-handler>
	</event-handlers>
</modelglue>